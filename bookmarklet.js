javascript:(function zzdbg_load(src) { if(window.zzdbg && zzdbg.script) zzdbg.script.remove(); var s = document.createElement("script"); s.textContent = src; document.body.appendChild(s); zzdbg.loader = zzdbg_load; zzdbg.script = s; })("(function zzdbg_main(){\n\nvar w = window;\nvar d = w.document;\nvar zzdbg = {};\nvar ui = d.createElement(\"div\");\nvar hpos = 0;\nvar oldconsole = {};\nvar reqHandlers = {};\nvar resHandlers = [null];\n\nzzdbg.loader = null;\nzzdbg.script = null;\nzzdbg.history = [];\nzzdbg.editors = [];\nzzdbg.editor = null;\nzzdbg.filename = null;\n\nif(w.zzdbg) {\nzzdbg.loader = w.zzdbg.loader;\nzzdbg.script = w.zzdbg.script;\nzzdbg.script.textContent = \"(\"+zzdbg_main.toString()+\")();\";\nw.zzdbg.script = null;\nzzdbg.history = w.zzdbg.history;\nzzdbg.editors = w.zzdbg.editors;\nzzdbg.editor = w.zzdbg.editor;\nw.zzdbg.editor = null;\nzzdbg.filename = w.zzdbg.filename;\nw.zzdbg.close();\n}\nw.zzdbg = zzdbg;\n\nzzdbg.close = function() {\nexchange(oldconsole, console);\nif(zzdbg.script) zzdbg.script.remove();\nui.remove();\nw.removeEventListener(\"message\", messageListener, true);\ndelete w.zzdbg;\n};\nzzdbg.ui = ui;\n\nui.className = \"zzdbgui\";\nui.innerHTML = '<style>'+\n'.zzdbgui, .zzdbgui * { font:3vw monospace !important; margin:0 !important; padding:0 !important; box-sizing:border-box !important; border-radius:0; background-color:white; color:black; }'+\n'.zzdbgui { position:fixed; left:0; bottom:0; width:100%; height:40%; z-index:100000000; }'+\n'.zzdbgui textarea, .zzdbgui input { border:0.3vw solid black !important; padding:0 1vw !important; }'+\n'.zzoutput { position:absolute; left:0; top:0; width:100%; height:calc(100% - 6vw); overflow-y:auto; white-space:pre-wrap; }'+\n'.zzbar { position:absolute; left:0; bottom:0; width:100%; height:6vw; }'+\n'.zzbar * { position:absolute; top:0; height:100%; }'+\n'.zzinput { left:0; width:calc(100% - 20vw) !important; }'+\n'.zzdnbtn, .zzupbtn { width:10vw; font-size:1em; text-align:center; }'+\n'.zzdnbtn { right:10vw; }'+\n'.zzupbtn { right:0; }'+\n'.zzsuggest { position:fixed; bottom:5vw; right:25vw; border:0.3vw solid black; overflow:hidden auto; text-overflow:ellipsis; }'+\n'.zzsuggest > * { padding:0.5vw 2vw !important; }'+\n'.zzeditor { width:100%; height:60%; font:3vw monospace; }'+\n'</style>'+\n'<textarea class=\"zzoutput\" readonly=\"true\"></textarea>'+\n'<div class=\"zzbar\">'+\n'<textarea class=\"zzinput\"></textarea>'+\n'<input class=\"zzdnbtn\" type=\"button\" value=\"⬇\">'+\n'<input class=\"zzupbtn\" type=\"button\" value=\"⬆\">'+\n'</div>'+\n'<div class=\"zzsuggest\" hidden><\\div>';\n\nd.body.appendChild(ui);\nvar output = ui.querySelector(\".zzoutput\");\nvar input = ui.querySelector(\".zzinput\");\nvar upbtn = ui.querySelector(\".zzupbtn\");\nvar dnbtn = ui.querySelector(\".zzdnbtn\");\nvar suggest = ui.querySelector(\".zzsuggest\");\nzzdbg.output = output;\nzzdbg.input = input;\nzzdbg.upbtn = upbtn;\nzzdbg.dnbtn = dnbtn;\nzzdbg.suggest = suggest;\n\n\nzzdbg.do = function(cmd) {\nvar err, res;\nvar quiet = false;\nwriteToOutput([\"> \"+cmd], true);\n\ntry {\nif(\".h\" == cmd) {\nzzdbg.info(zzdbg.doc);\nquiet = true;\n} else if(\".q\" == cmd) return zzdbg.close();\nelse if(/^\\.o\\b/.test(cmd)) res = zzdbg.open(zzdbg.evalLocal(\"(\"+cmd.replace(/^\\.o\\s*/, \"\")+\")\"));\nelse if(/^\\.d\\b/.test(cmd)) res = docLookup(cmd.replace(/^\\.d\\s*/, \"\"));\nelse if(/^\\.p\\b/.test(cmd)) res = zzdbg.properties(zzdbg.evalLocal(\"(\"+cmd.replace(/^\\.p\\s*/, \"\")+\")\"));\nelse if(\".e\" == cmd) {\nselectElement();\nquiet = true;\n} else if(\".a\" == cmd) {\nzzdbg.applyChanges();\nquiet = true;\n} else if(/^\\.s\\b/.test(cmd)) {\nzzdbg.filename = cmd.replace(/^\\.s\\s*|\\s*$/g, \"\") || zzdbg.filename;\nzzdbg.dl({ filename: zzdbg.filename || \"untitled.txt\", url:\"data:,\"+zzdbg.editor.value });\n} else res = zzdbg.evalLocal(cmd.replace(/^javascript:/, \"\"));\n} catch(e) { err = e; }\n\nif(!quiet) writeToOutput([err||res], false);\nif(\".c\" == cmd) output.value = \"\";\nzzdbg.history.push({ cmd:cmd, res:res, err:err });\nw._ = res;\n};\n\ninput.onkeydown = function(event) {\nvar cmd = input.value;\nhpos = 0;\nif(\"Enter\" != event.key) return;\nevent.preventDefault();\nif(\"\" == cmd) return;\ninput.value = \"\";\nzzdbg.do(cmd);\nsuggest.hidden = true;\n};\ninput.onkeyup = function(event){\nvar cmd = input.value;\nvar pos = input.selectionEnd;\nvar term = cmd.slice(0, pos).match(/([\\w$]+\\.)*[\\w$]*$/);\ntry {\nvar base = term[0].replace(/\\.?[\\w$]*$/, \"\") || \"window\";\nvar part = term[0].replace(/^([\\w$]+\\.)*/, \"\");\nvar compare = new Intl.Collator(\"en\").compare;\nvar props = term[0].length ? zzdbg.properties(zzdbg.evalLocal(\"(\"+base+\")\")) : [];\nprops = Array.prototype.concat.apply([], props).filter(function(prop){ return prop.startsWith(part) && prop != part; }).sort(compare);\n\nsuggest.innerHTML = \"\";\nfor(var i = 0; i < props.length; i++) {\nvar item = d.createElement(\"div\");\nitem.textContent = props[i];\nsuggest.appendChild(item);\nitem.onclick = function() {\ninput.value = input.value.slice(0, pos)+this.textContent.slice(part.length)+input.value.slice(pos);\nsuggest.hidden = true;\ninput.focus();\ninput.selectionStart = input.selectionEnd = pos+(this.textContent.length-part.length);\n};\n}\nsuggest.hidden = !props.length;\nsuggest.style.width = suggest.scrollWidth+\"px\";\nsuggest.style.height = Math.min(suggest.scrollHeight, w.innerHeight*.75)+\"px\";\n} catch(e) { suggest.hidden = true; }\n};\n\n\ndnbtn.onclick = upbtn.onclick = function(event) {\ninput.focus();\nvar dir = 0;\nif(dnbtn == this) dir = -1;\nif(upbtn == this) dir = +1;\nif(0 == dir) return;\nhpos += dir;\nhpos = Math.min(hpos, zzdbg.history.length);\nif(hpos < 0) hpos = 0;\ninput.value = hpos ? zzdbg.history.slice(-hpos)[0].cmd : \"\";\ninput.selectionStart = input.selectionEnd = input.value.length;\n};\n\n\nzzdbg.stringify = null;\nzzdbg.stringifyDepth = 3;\nzzdbg.stringifyFull = function(x, depth, inlineStrings) {\nif(undefined === depth || undefined === inlineStrings) throw new Error(\"stringify args\");\n\nif(zzdbg.stringify) {\nx = zzdbg.stringify(x, depth, inlineStrings);\nif(isString(x)) return x;\n}\n\nif(depth >= zzdbg.stringifyDepth) return \"…\";\nif(depth >= 1 && \"function\" == typeof x) return \"[function …]\";\n\nif(x instanceof Text) {\nx = x.textContent.replace(/^\\s+|\\s+$/g, \"\");\nif(!x) return '\" \"';\n}\n\nif(isString(x)) {\nreturn inlineStrings && 0 == depth ? x : JSON.stringify(x);\n}\n\nif(x instanceof NodeList || x instanceof NamedNodeMap || x instanceof StyleSheetList || x instanceof HTMLCollection) x = toArray(x);\n\nif(Array.isArray(x)) {\nif(depth >= zzdbg.stringifyDepth-1) return \"[ (\"+x.length+\" item(s)) ]\";\nreturn \"[ \"+x.map(function(y) { return zzdbg.stringifyFull(y, depth+1, inlineStrings); }).join(\", \")+\" ]\";\n}\n\nif(x instanceof Window) return \"[Window \"+zzdbg.stringifyFull(x.initialLocation||x.location.href, depth+1, inlineStrings)+\"]\";\n\ntry {\nif(x instanceof CSSStyleSheet) return zzdbg.stringifyFull(x.cssRules, depth, inlineStrings);\nif(x instanceof CSSRuleList) {\nif(depth >= 1) return \"[\"+x.length+\" CSS rule(s)]\";\nreturn toArray(x).map(function(rule) { return zzdbg.stringifyFull(rule, depth+1, inlineStrings); }).join(\"\\n\");\n}\nif(x instanceof CSSRule) return x.cssText;\nif(x instanceof CSSStyleDeclaration) return \"{ \"+(x.cssText||toArray(x).filter(function(attr) { return x[attr]; }).map(function(attr) { return attr+\": \"+x[attr]; }).join(\"; \"))+\" }\";\n} catch(e) { if(!(e instanceof SecurityError)) throw e; }\n\nfunction url_summary(url) {\nreturn 0 == depth ? url : url.replace(/^.*\\//, \"…\");\n}\nif(x instanceof HTMLElement) {\nvar attrs = [x.tagName.toLowerCase()];\nif(x.id) attrs.push('id=\"'+x.id+'\"');\nelse if(x.href) attrs.push('href=\"'+url_summary(x.href)+'\"');\nelse if(x.src) attrs.push('src=\"'+url_summary(x.src)+'\"');\nelse if(x.className) attrs.push('class=\"'+x.className+'\"');\nreturn \"<\"+attrs.join(\" \")+\">\";\n}\n\nif(x instanceof Attr) return x.name+'=\"'+x.value+'\"';\n\nvar str = null;\nif(null === x || undefined === x) str = String(x);\ntry { if(null === str && x.__proto__ && \"function\" == typeof x.__proto__.toString) str = String(x.__proto__.toString.call(x));\n} catch(e){}\nif(null === str) str = Object.prototype.toString.call(x);\n\nif(!isString(x) && \"[object Object]\" == str) return \"{ \"+Object.keys(x).map(function(key) { return key+\": \"+zzdbg.stringifyFull(x[key], depth+1, inlineStrings); }).join(\", \")+\" }\";\n\nreturn str;\n};\n\n\nfunction findprop(obj, prop, depth) {\nif(!depth) return null;\nif(!obj) return null;\nvar descriptors = Object.getOwnPropertyDescriptors(obj);\n\nfor(var name in descriptors) {\nif(obj === w && descriptors[name].enumerable) continue;\nvar val = descriptors[name].value;\nif(\"function\" != typeof val) continue;\nif(prop.constructor === val && Function != val) return [name];\nif(val === prop) return [name];\nvar x = findprop(val.prototype, prop, depth-1) || findprop(val, prop, depth-1);\nif(x) return [name].concat(x);\n}\nreturn null;\n}\nfunction docLookup(str) {\nvar url = null;\ntry {\nvar path = null;\nif(\"\" === str) return zzdbg.info(\"Usage: .d (expression or search terms)\");\nif(\"null\" == str || \"undefined\" == str) path = [str];\nelse {\nvar x = zzdbg.evalLocal(\"(\"+str+\")\");\nif(null === x || undefined === x) throw new Error();\npath = findprop(w, x, 2);\n}\nif(!path || !path[0]) throw new Error();\n\nif(\"CSS2Properties\" == path[0]) path[0] = \"CSSStyleDeclaration\";\n\nif(/^encode|^Object$|^Array$|^Boolean$|^Number$|^BigInt$|^Math$|^Date$|^String$|^RegExp$|Error$/.test(path[0])) url = \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/\"+path.join(\"/\");\nelse if(/^CSS|^DOM|^File|^HTML|^Node|^NamedNode|^RTC|^XML|^Attr$|^ChildNode$|^Document$|^IDBFactory$|^URL$|^Window$|Event|Style|Element$|List$/.test(path[0])) url = \"https://developer.mozilla.org/en-US/docs/Web/API/\"+path.join(\"/\");\nelse url = \"https://developer.mozilla.org/en-US/search?q=\"+path.join(\".\");\n\n} catch(e) {\nurl = \"https://developer.mozilla.org/en-US/search?q=\"+encodeURIComponent(str);\n}\n\nreturn zzdbg.openWindow(url);\n}\n\nzzdbg.properties = function(obj) {\nvar descriptors = Object.getOwnPropertyDescriptors(obj);\nvar results = [ Object.keys(descriptors) ];\nvar proto = null;\ntry { proto = obj.__proto__; }\ncatch(e) {}\nif(proto) results =  results.concat(zzdbg.properties(proto));\nreturn results;\n};\n\n\nzzdbg.selectElement = function(root, callback) {\nroot = root || d;\nroot.addEventListener(\"click\", listener, true);\nfunction listener(event) {\nevent.preventDefault();\nevent.stopPropagation();\nroot.removeEventListener(\"click\", listener, true);\nif(callback) callback(event.target);\n}\n};\nzzdbg.lastSelectedElement = null;\nfunction selectElement() {\nzzdbg.selectElement(null, function(elem) {\nzzdbg.selectElementAction(elem);\nvar h = zzdbg.history.slice(-1)[0];\nif(h && \".e\" == h.cmd) { h.res = elem; w._ = elem; }\nzzdbg.lastSelectedElement = elem;\n});\nzzdbg.info(\"(Waiting for click…)\");\n}\n\n\nzzdbg.log = zzdbg.info = function zzdbg_log(...args) {\nwriteToOutput(args, true);\n};\nzzdbg.warn = specialLog(\"Warning:\");\nzzdbg.error = specialLog(\"Error:\");\nfunction specialLog(pfx) {\nreturn function zzdbg_log(...args) { writeToOutput([pfx].concat(args), true); };\n};\noldconsole.log = oldconsole.warn = oldconsole.info = oldconsole.error = zzdbg.log;\nexchange(oldconsole, console);\nfunction writeToOutput(array, inlineStrings) {\nif(output.value) output.value +=\"\\n\";\ntry { output.value += array.map(function(arg) { return zzdbg.stringifyFull(arg, 0, inlineStrings); }).join(\" \"); }\ncatch(e) { output.value += e+\" (zzdbg stringify)\"; }\noutput.scrollTop = output.scrollHeight;\n}\n\n\nzzdbg.inspect = zzdbg.selectElementAction = function(elem) {\nzzdbg.log(elem, zzdbg.cssRules(elem));\n};\nzzdbg.cssRules = function(elem) {\nvar results = [];\nvar sheets = d.styleSheets;\nfor(var i = 0; i < sheets.length; i++) {\nvar rules = sheets[i].cssRules;\nfor(var j = 0; j < rules.length; j++) {\nvar matches = false;\ntry { matches = elem.matches(rules[j].selectorText); } catch(e) { if(!(e instanceof SyntaxError)) throw e; }\nif(matches) results.push(rules[j]);\n}\n}\nreturn results;\n};\n\n\nzzdbg.open = function(obj) {\nreturn zzdbg.viewAsSource(obj) || zzdbg.openWindow(parseURL(obj) || obj.href || obj.src);\n};\nzzdbg.viewAsSource = function(obj, name) {\nvar target = obj, url, str;\nif(obj == zzdbg.loader) {\ntarget = \"loader.js\";\nstr = obj.toString();\nname = name || target;\n} else if(obj instanceof HTMLScriptElement) {\nif(obj.src) url = obj.src;\nelse str = obj.textContent;\nif(obj == zzdbg.script) name = name || \"zzdbg.js\";\nname = name || \"untitled.js\";\n} else if(obj instanceof HTMLStyleElement) {\nstr = obj.textContent;\n} else if(obj instanceof CSSStyleSheet) {\nif(obj.href) url = obj.href;\nelse str = obj.ownerNode.textContent;\n} else if(obj instanceof HTMLLinkElement) {\nurl = obj.href;\n} else if(isString(obj)) {\nvar parsed = parseURL(obj);\nif(!parsed) str = obj;\nelse if(\"javascript:\" == parsed.protocol) {\nstr = obj;\nname = name || \"bookmarklet.js\";\n} else if(/\\.(js|css|html)$/i.test(parsed.pathname)) url = obj;\ntarget = null;\n}\nreturn openEditor(target, url, str, name);\n};\nfunction findEditor(obj) {\nif(!obj) return;\nvar ed = zzdbg.editors;\nfor(var i = 0; i < ed.length; i++) {\nif(ed[i].window.closed) { ed.splice(i, 1); i--; continue; }\nif(ed[i].window === obj) return ed[i].target;\nif(ed[i].target === obj) return ed[i].window;\n}\n}\nfunction openEditor(target, url, str, name) {\nvar win = findEditor(target);\nif(win) return win.focus(), win;\nif(!url && !isString(str)) return null;\nvar title = \"zzdbg source view for \"+(name||\"untitled\")+\" (\"+d.title+\")\";\nvar jsurl = 'javascript:'+JSON.stringify(title)+'; \"...\"';\nwin = zzdbg.openWindow(url || jsurl, \"editor\");\ntry { win.onload = setupWin; }\ncatch(e) { zzdbg.info(\"(To edit, run zzdbg again in the new window)\"); }\nfunction setupWin() {\nwin.onload = null;\nif(!url) {\nwin.document.title = name || \"\";\nwin.document.body.innerHTML = \"<pre></pre>\";\nwin.document.querySelector(\"pre\").textContent = str.replace(/^\\s+|\\s+$/g, \"\");\n}\nwin.zzdbg_filename = name;\nwin.location = zzdbg.bookmarklet();\n}\nzzdbg.editors.push({ window:win, target:target });\nreturn win;\n}\nzzdbg.applyChanges = function() {\nif(!zzdbg.editor) throw new Error(\"Not in edit mode\");\nvar src = zzdbg.editor.value;\nsendWindowRequest(w.opener, \"apply\", { src:src }, function(res) { zzdbg.info(\"Apply changes:\", res || \"success\"); });\n};\nreqHandlers.apply = function(win, payload, sendRes) {\nvar target = findEditor(win);\nif(undefined === target) return sendRes(\"unknown target\");\nvar src = payload.src;\nif(!isString(src)) return sendRes(\"not a string\");\ntry {\nif(!target) {\nreturn sendRes(\"target does not support editing\");\n} else if(\"loader.js\" == target) {\nzzdbg.loader = zzdbg.evalLocal(\"(\"+src+\")\");\n} else if(target instanceof HTMLScriptElement) {\nif(target.src) target[\"data-zzdbg-src\"] = target.src;\ntarget.removeAttribute(\"src\");\ntarget.textContent = src;\nzzdbg.evalLocal(src);\n} else {\nzzdbg.log(\"apply to unsupported target\", target);\nreturn sendRes(\"unsupported target\");\n}\nsendRes(null);\n} catch(e) { sendRes(String(e)); }\n};\nzzdbg.openWindow = function(url, type) {\nif(!url) return null;\nurl = String(url);\nvar rnd = Math.random().toString(36).slice(2);\nvar win = w.open(url, \"zzdbg-\"+(type||\"window\")+\"-\"+rnd);\nwin.initialLocation = url;\nreturn win;\n};\nzzdbg.bookmarklet = function() {\nreturn 'javascript:('+zzdbg.loader.toString()+')('+JSON.stringify(\"(\"+zzdbg_main.toString()+\")()\")+');/*END*/';\n};\n\nzzdbg.wgetcmd = function(dls) {\nif(!Array.isArray(dls)) dls = toArray(arguments);\nreturn dls.map(function(dl){ return \"wget --adjust-extension \" + (isString(dl) ? safe_shell_arg(dl) : safe_shell_arg(dl.url)+\" -O '\"+safe_filename(dl.filename)+\"'\"); }).join(\"; \");\n};\nfunction safe_shell_arg(shell_arg) {\nreturn \"'\"+shell_arg.replace(/\\'/g, \"\\\\'\")+\"'\";\n}\nfunction safe_filename(filename) {\nreturn filename.replace(/[^a-zA-Z0-9._ \\[\\]\\{\\}-]/g, \"_\");\n}\nzzdbg.dl = function(dls) {\nif(!Array.isArray(dls)) dls = toArray(arguments);\nvar a = d.createElement(\"a\");\nui.appendChild(a);\n/*a.target = \"_blank\";*/\nfor(var i = 0; i < dls.length; i++) {\na.download = (isString(dls[i]) ? \"\" : dls[i].filename);\na.href = (isString(dls[i]) ? dls[i] : dls[i].url);\na.click();\n}\na.remove();\n};\n\n\nfunction has(a, b) {\nreturn Object.prototype.hasOwnProperty.call(a, b);\n}\nfunction exchange(a, b) {\nfor(var prop in a) if(has(a, prop)) {\nvar swap = a[prop];\na[prop] = b[prop];\nb[prop] = swap;\n}\n}\nfunction toArray(x) {\nreturn Array.prototype.slice.call(x);\n}\nfunction isString(x) {\nreturn \"string\" == typeof x || x instanceof String;\n}\nfunction escapeHTML(str) {\nvar x = d.createElement(\"div\");\nx.textContent = str;\nreturn x.innerHTML;\n}\nfunction parseURL(str) {\ntry { return new URL(str); }\ncatch(e) { return null; }\n}\n\nzzdbg.log(\"zzdbg - type .h for help\");\n\nfunction eval2(str) {\nvar n = zzdbg.evalItems.length;\nvar x = zzdbg.evalItems[n] = { err: new SyntaxError(\"eval2\") };\nvar s = d.createElement(\"script\");\nstr = str.replace(/(;|\\s|\\/\\/[^\"']*|\\/\\*[^\"']*)*$/, \"\");\nvar expr = /^\\s*\\{/.test(str) ? '{{{{{ '+str+' }}}}}' : 'zzdbg.evalItems['+n+'].res = ((((( '+str+' )))))';\ns.textContent =\n'try { '+expr+'; delete zzdbg.evalItems['+n+'].err; }'+\n'catch(e) { zzdbg.evalItems['+n+'].err = e; }';\nui.appendChild(s); s.remove();\ndelete zzdbg.evalItems[n];\nif(has(x, \"err\")) throw x.err;\nreturn x.res;\n}\nzzdbg.evalItems = [];\nzzdbg.evalLocal = eval;\ntry { zzdbg.evalLocal('\"test\"'); }\ncatch(e) {\nzzdbg.evalLocal = eval2; zzdbg.warn(\"Warning: zzdbg is running without eval(). Please wrap statements in braces: { var x; }. Expressions can be run as normal: func(). (\"+e+\")\");\n}\nzzdbg.eval = function(cmd, cb) {\nvar err = null, res = null;\ntry { res = zzdbg.evalLocal(cmd); }\ncatch(e) { err = e; }\nsetTimeout(function() { cb(err, res); }, 0);\n};\n\n\nfunction enterEditMode() {\nzzdbg.info(\"Editor mode: use .a to apply changes to main document\");\nzzdbg.eval = function(src, cb) {\nsendWindowRequest(w.opener, \"eval\", cmd, function(res) {});\n};\nif(!zzdbg.editor) {\nzzdbg.filename = w.zzdbg_filename || w.location.pathname.replace(/^.*\\//, \"\");\nzzdbg.editor = d.createElement(\"textarea\");\nzzdbg.editor.className = \"zzeditor\";\nd.title = \"zzdbg source view for \"+d.title;\nvar pre = d.querySelector(\"pre\");\nzzdbg.editor.value = pre.textContent;\npre.replaceWith(zzdbg.editor);\n}\n}\nreqHandlers.eval = function(win, payload, sendRes) {};\nif(/^zzdbg-editor/.test(w.name)) enterEditMode();\n\n\nfunction sendWindowRequest(window, type, payload, cb) {\nvar id = resHandlers.length;\nresHandlers[id] = cb;\nwindow.postMessage({ zzdbg_msg:{ dir:\"req\", type:type, payload:payload, id:id } }, \"*\");\n}\nfunction messageListener(ev) {\nvar win = ev.source;\nvar msg = ev.data.zzdbg_msg;\nvar dir = msg.dir;\nvar type = msg.type;\nvar payload = msg.payload;\nvar id = msg.id;\nif(\"req\" == dir && has(reqHandlers, type)) reqHandlers[type](win, payload, sendRes);\nif(\"res\" == dir && id < resHandlers.length && \"function\" == typeof resHandlers[id]) { resHandlers[id](payload); delete resHandlers[id]; }\nfunction sendRes(payload) {\nwin.postMessage({ zzdbg_msg:{ dir:\"res\", type:type, payload:payload, id:id } }, ev.origin);\n}\n}\nw.addEventListener(\"message\", messageListener, true);\n\n\nzzdbg.doc = \"Commands:\"+\n\"\\n\\t.h - help\"+\n\"\\n\\t.q - quit\"+\n\"\\n\\t.c - clear output\"+\n\"\\n\\t.o (expr) - open/view source\"+\n\"\\n\\t.d (expr) - MDN doc\"+\n\"\\n\\t.p (expr) - list properties\"+\n\"\\n\\t.e - select element\"+\n\"\\n\\t.a - apply changes to main document (editor mode)\"+\n\"\\n\\t.s (filename) - save file (editor mode)\"+\n\"\";\ninput.focus();\n})()");/*END*/